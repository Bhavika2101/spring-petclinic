# ********RoostGPT********

# Test generated by RoostGPT for test hsbc-simulation-api2 using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /my/payment/simulation_post for http method type POST in artillery framework
# RoostTestHash=b2c14d9fe3
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "my_payment_simulation_post_others.csv"
    fields: ["merId", "storeLabel", "terminalLabel", "amount", "currency", "txnRef", "txnChannel", "referenceLabel", "is_notification_encrypted"]
    skipHeader: true
  environments:
    dev:
      target: "{{ $processEnvironment.API_HOST }}"

scenarios:
  - name: "Non-success API requests testing"
    flow:
      # Testing with incorrect endpoint
      - get:
          url: "/incorrect/endpoint"
          expect:
            - statusCode: 404
      - think: 2

      # Testing with invalid payload
      - post:
          url: "/my/payment/simulation"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
            Authorization: "{{$processEnvironment.AUTH_TOKEN}}"
          json:
            merchant:
              merId: "{{ merId }}"
              storeLabel: "{{ storeLabel }}"
              terminalLabel: "{{ terminalLabel }}"
            order:
              amount: "{{ amount }}"
              currency: "{{ currency }}"
            transaction:
              txnRef: "{{ txnRef }}"
              txnChannel: "{{ txnChannel }}"
              referenceLabel: "{{ referenceLabel }}"
            system:
              is_notification_encrypted: "{{ is_notification_encrypted }}"
            # Invalid field added
            invalidField: "invalidValue"
          expect:
            - statusCode: 400
      - think: 2

      # Testing with missing authorization header
      - post:
          url: "/my/payment/simulation"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
          json:
            merchant:
              merId: "{{ merId }}"
              storeLabel: "{{ storeLabel }}"
              terminalLabel: "{{ terminalLabel }}"
            order:
              amount: "{{ amount }}"
              currency: "{{ currency }}"
            transaction:
              txnRef: "{{ txnRef }}"
              txnChannel: "{{ txnChannel }}"
              referenceLabel: "{{ referenceLabel }}"
            system:
              is_notification_encrypted: "{{ is_notification_encrypted }}"
          expect:
            - statusCode: 401
      - think: 2

      # Testing with invalid authorization token
      - post:
          url: "/my/payment/simulation"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
            Authorization: "invalidToken"
          json:
            merchant:
              merId: "{{ merId }}"
              storeLabel: "{{ storeLabel }}"
              terminalLabel: "{{ terminalLabel }}"
            order:
              amount: "{{ amount }}"
              currency: "{{ currency }}"
            transaction:
              txnRef: "{{ txnRef }}"
              txnChannel: "{{ txnChannel }}"
              referenceLabel: "{{ referenceLabel }}"
            system:
              is_notification_encrypted: "{{ is_notification_encrypted }}"
          expect:
            - statusCode: 403
      - think: 2
