# ********RoostGPT********

# Test generated by RoostGPT for test hsbc-simulation-api2 using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /my/payment/simulation_post for http method type POST in artillery framework
# RoostTestHash=b2c14d9fe3
# 
# 

# ********RoostGPT********
config:
  target: "{{ processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "my_payment_simulation_post_success.csv"
    fields:
      - "system.is_notification_encrypted"
      - "transaction.txnRef"
      - "transaction.txnChannel"
      - "transaction.referenceLabel"
      - "merchant.merId"
      - "merchant.storeLabel"
      - "merchant.terminalLabel"
      - "customer.consumerLabel"
      - "customer.loyaltyNumber"
      - "order.amount"
      - "order.currency"
      - "bill.billNumber"
      - "bill.rrn"
      - "bill.rrn2"
      - "supplementary.mobileNumber"
      - "supplementary.purposeOfTransaction"
      - "supplementary.additionalConsumerDataRequest"
      - "supplementary.geoCoordinates"
      - "supplementary.suppInfo"
    skipHeader: true

scenarios:
  - name: "Payment Simulation API Test"
    flow:
      - post:
          url: "/my/payment/simulation"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
            Authorization: "Bearer {{ processEnvironment.AUTH_TOKEN }}"
          json:
            system:
              is_notification_encrypted: "{{ system.is_notification_encrypted }}"
            transaction:
              txnRef: "{{ transaction.txnRef }}"
              txnChannel: "{{ transaction.txnChannel }}"
              referenceLabel: "{{ transaction.referenceLabel }}"
            merchant:
              merId: "{{ merchant.merId }}"
              storeLabel: "{{ merchant.storeLabel }}"
              terminalLabel: "{{ merchant.terminalLabel }}"
            customer:
              consumerLabel: "{{ customer.consumerLabel }}"
              loyaltyNumber: "{{ customer.loyaltyNumber }}"
            order:
              amount: "{{ order.amount }}"
              currency: "{{ order.currency }}"
            bill:
              billNumber: "{{ bill.billNumber }}"
              rrn: "{{ bill.rrn }}"
              rrn2: "{{ bill.rrn2 }}"
            supplementary:
              mobileNumber: "{{ supplementary.mobileNumber }}"
              purposeOfTransaction: "{{ supplementary.purposeOfTransaction }}"
              additionalConsumerDataRequest: "{{ supplementary.additionalConsumerDataRequest }}"
              geoCoordinates: "{{ supplementary.geoCoordinates }}"
              suppInfo: "{{ supplementary.suppInfo }}"
          expect:
            - statusCode: 200
            - hasProperty: "api_gw.messageId"
            - hasProperty: "api_gw.returnCode"
            - equals: ["api_gw.returnCode", "200"]
            - hasProperty: "api_gw.returnReason"
            - hasProperty: "api_gw.sentTime"
            - hasProperty: "api_gw.responseTime"
            - hasProperty: "response.txnRef"
            - hasProperty: "response.proCode"
            - equals: ["response.proCode", "000000"]
            - hasProperty: "response.proMsg"
            - equals: ["response.proMsg", "Transaction Successful"]
        think: 1
