# ********RoostGPT********

# Test generated by RoostGPT for test hsbc-simulation-api2 using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /sg/payment/simulation_post for http method type POST in artillery framework
# RoostTestHash=261d0e9dce
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "sg_payment_simulation_post_others.csv"
    skipHeader: true
    fields:
      - "is_notification_encrypted"
      - "merId"
      - "txnRef"
      - "currency"
      - "amount"
      - "originatingCustName"
  plugins:
    expect: {}

scenarios:
  - name: "Test Non-Success API Responses"
    flow:
      # Testing invalid payload
      - post:
          url: "/sg/payment/simulation"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
            Authorization: "{{$processEnvironment.AUTH_TOKEN}}"
          json:
            is_notification_encrypted: "{{ is_notification_encrypted }}"
            merId: "{{ merId }}"
            txnRef: "{{ txnRef }}"
            currency: "{{ currency }}"
            amount: "{{ amount }}"
            originatingCustName: "{{ originatingCustName }}"
      - expect:
            - statusCode: 400
      - think: 1

      # Testing invalid authorization
      - post:
          url: "/sg/payment/simulation"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
            Authorization: "InvalidToken"
          json:
            is_notification_encrypted: "{{ is_notification_encrypted }}"
            merId: "{{ merId }}"
            txnRef: "{{ txnRef }}"
            currency: "{{ currency }}"
            amount: "{{ amount }}"
            originatingCustName: "{{ originatingCustName }}"
      - expect:
            - statusCode: 401
      - think: 1

      # Testing invalid URL
      - post:
          url: "/sg/payment/invalidURL"
          headers:
            Content-Type: "application/json"
            message_encrypt: false
            Authorization: "{{$processEnvironment.AUTH_TOKEN}}"
          json:
            is_notification_encrypted: "{{ is_notification_encrypted }}"
            merId: "{{ merId }}"
            txnRef: "{{ txnRef }}"
            currency: "{{ currency }}"
            amount: "{{ amount }}"
            originatingCustName: "{{ originatingCustName }}"
      - expect:
            - statusCode: 404
      - think: 1
