/*
Test generated by RoostGPT for test pom-test using AI Type Open Source AI and AI Model meta-llama/Llama-2-13b-chat

Sure, here are some test scenarios that you can use to validate the business logic of the `setName` method:

1. **Test with valid name**:
   - Scenario: The method is called with a valid name (e.g., "John Doe").
   - Expected Result: The `name` field is set to the provided value.

2. **Test with null name**:
   - Scenario: The method is called with a null value.
   - Expected Result: The `name` field is set to null.

3. **Test with empty string**:
   - Scenario: The method is called with an empty string.
   - Expected Result: The `name` field is set to an empty string.

4. **Test with very long name**:
   - Scenario: The method is called with a name that exceeds the maximum length specified by the `@Column` annotation.
   - Expected Result: The `name` field is set to the provided value.

5. **Test with very short name**:
   - Scenario: The method is called with a name that is shorter than the minimum length specified by the `@Column` annotation.
   - Expected Result: The `name` field is not set and an exception is thrown.

6. **Test with special characters**:
   - Scenario: The method is called with a name that contains special characters.
   - Expected Result: The `name` field is set to the provided value.

7. **Test with numbers**:
   - Scenario: The method is called with a name that contains numbers.
   - Expected Result: The `name` field is set to the provided value.

8. **Test with white spaces**:
   - Scenario: The method is called with a name that contains white spaces.
   - Expected Result: The `name` field is set to the provided value.

Remember, these test scenarios are based on the assumption that the `@Column` annotation is set to specify the maximum length of the `name` field. If the `@Column` annotation is not set, you may need to adjust the test scenarios accordingly.

*/
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.junit.jupiter.api.Assertions.assertEquals;

@ExtendWith(MockitoExtension.class)
public class NamedEntity_setName_5d23a892d9_Test {

    @Test
    public void testSetName_success() {
        NamedEntity namedEntity = new NamedEntity();
        String expectedName = "Test Name";
        namedEntity.setName(expectedName);
        assertEquals(expectedName, namedEntity.getName());
    }

    @Test
    public void testSetName_null() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName(null);
        assertEquals(null, namedEntity.getName());
    }
}
