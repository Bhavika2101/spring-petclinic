/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Vertex AI and AI Model code-bison

 **Test Scenario 1: Null Value**

**Test Objective:** Verify that the getName() method returns null when the name attribute is not set.

**Test Steps:**

1. Create a new entity object without setting the name attribute.
2. Call the getName() method on the object.
3. Assert that the returned value is null.

**Expected Result:**

The getName() method should return null.

**Test Scenario 2: Empty String**

**Test Objective:** Verify that the getName() method returns an empty string when the name attribute is set to an empty string.

**Test Steps:**

1. Create a new entity object and set the name attribute to an empty string.
2. Call the getName() method on the object.
3. Assert that the returned value is an empty string.

**Expected Result:**

The getName() method should return an empty string.

**Test Scenario 3: Valid Name**

**Test Objective:** Verify that the getName() method returns the correct name when the name attribute is set to a valid name.

**Test Steps:**

1. Create a new entity object and set the name attribute to a valid name.
2. Call the getName() method on the object.
3. Assert that the returned value is equal to the expected name.

**Expected Result:**

The getName() method should return the expected name.

**Test Scenario 4: Special Characters**

**Test Objective:** Verify that the getName() method handles special characters in the name attribute correctly.

**Test Steps:**

1. Create a new entity object and set the name attribute to a string containing special characters.
2. Call the getName() method on the object.
3. Assert that the returned value is equal to the expected name with special characters.

**Expected Result:**

The getName() method should return the expected name with special characters.

**Test Scenario 5: Maximum Length**

**Test Objective:** Verify that the getName() method truncates the name attribute to the maximum length if it exceeds the maximum length.

**Test Steps:**

1. Create a new entity object and set the name attribute to a string that exceeds the maximum length.
2. Call the getName() method on the object.
3. Assert that the returned value is equal to the expected name truncated to the maximum length.

**Expected Result:**

The getName() method should return the expected name truncated to the maximum length.
*/
import org.junit.jupiter.api.Test;
import org.springframework.samples.petclinic.model.NamedEntity;

import static org.junit.jupiter.api.Assertions.*;

class NamedEntity_getName_8400ac6fb7_Test {

    @Test
    void getName_nullValue() {
        // GIVEN
        NamedEntity entity = new NamedEntity();

        // WHEN
        String name = entity.getName();

        // THEN
        assertNull(name);
    }

    @Test
    void getName_emptyString() {
        // GIVEN
        NamedEntity entity = new NamedEntity();
        entity.setName("");

        // WHEN
        String name = entity.getName();

        // THEN
        assertEquals("", name);
    }

    @Test
    void getName_validName() {
        // GIVEN
        NamedEntity entity = new NamedEntity();
        entity.setName("John Doe");

        // WHEN
        String name = entity.getName();

        // THEN
        assertEquals("John Doe", name);
    }

    @Test
    void getName_specialCharacters() {
        // GIVEN
        NamedEntity entity = new NamedEntity();
        entity.setName("J@hn D0e");

        // WHEN
        String name = entity.getName();

        // THEN
        assertEquals("J@hn D0e", name);
    }

    @Test
    void getName_maxLength() {
        // GIVEN
        NamedEntity entity = new NamedEntity();
        entity.setName("This is a very long name that exceeds the maximum length of 255 characters.");

        // WHEN
        String name = entity.getName();

        // THEN
        assertEquals("This is a very long name that exceeds the maximum length of 255 characters.", name);
    }
}
