/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function returns the correct name
   - Given that a name is set for the object
   - When `getName()` is called
   - Then it should return the correct name as set for the object

2. Scenario: Check if the function returns null when no name is set
   - Given that no name is set for the object
   - When `getName()` is called
   - Then it should return null

3. Scenario: Check if the function can handle and return special characters in the name
   - Given that the name of the object is set with special characters
   - When `getName()` is called
   - Then it should return the name with special characters

4. Scenario: Check if the function can handle and return numeric characters in the name
   - Given that the name of the object is set with numeric characters
   - When `getName()` is called
   - Then it should return the name with numeric characters

5. Scenario: Check if the function can handle and return names with spaces
   - Given that the name of the object is set with spaces
   - When `getName()` is called
   - Then it should return the name with spaces

6. Scenario: Check if the function can handle and return names with mixed characters (alphabets, numerics, special characters and spaces)
   - Given that the name of the object is set with mixed characters
   - When `getName()` is called
   - Then it should return the name with mixed characters

7. Scenario: Check if the function can handle and return long names
   - Given that the name of the object is set with a long string
   - When `getName()` is called
   - Then it should return the long name

8. Scenario: Check if the function can handle and return names with non-English characters
   - Given that the name of the object is set with non-English characters
   - When `getName()` is called
   - Then it should return the name with non-English characters
*/
package org.springframework.samples.petclinic.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

public class NamedEntity_getName_8400ac6fb7_Test {

    @Test
    public void testGetName() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("John Doe");
        assertEquals("John Doe", namedEntity.getName());
    }

    @Test
    public void testGetNameWhenNoNameSet() {
        NamedEntity namedEntity = new NamedEntity();
        assertNull(namedEntity.getName());
    }

    @Test
    public void testGetNameWithSpecialCharacters() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("#$%^&*()!");
        assertEquals("#$%^&*()!", namedEntity.getName());
    }

    @Test
    public void testGetNameWithNumericCharacters() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("1234567890");
        assertEquals("1234567890", namedEntity.getName());
    }

    @Test
    public void testGetNameWithSpaces() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("John Doe");
        assertEquals("John Doe", namedEntity.getName());
    }

    @Test
    public void testGetNameWithMixedCharacters() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("John123 #$%^&*()!");
        assertEquals("John123 #$%^&*()!", namedEntity.getName());
    }

    @Test
    public void testGetNameWithLongName() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("JohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoe");
        assertEquals("JohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoeJohnDoe", namedEntity.getName());
    }

    @Test
    public void testGetNameWithNonEnglishCharacters() {
        NamedEntity namedEntity = new NamedEntity();
        namedEntity.setName("Jöhn Døe");
        assertEquals("Jöhn Døe", namedEntity.getName());
    }
}
