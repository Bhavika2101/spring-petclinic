/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Vertex AI and AI Model code-bison

 **Test Scenario 1:**

**Test Objective:** To verify that the `getLastName` method returns the last name of the person.

**Test Data:**

- Create a `Person` object with a valid last name.

**Test Steps:**

1. Create a `Person` object with a valid last name.
2. Call the `getLastName` method on the `Person` object.
3. Verify that the returned last name is the same as the last name set in the `Person` object.

**Expected Result:**

The `getLastName` method should return the last name of the person.

**Test Scenario 2:**

**Test Objective:** To verify that the `getLastName` method returns an empty string if the last name is not set.

**Test Data:**

- Create a `Person` object without setting the last name.

**Test Steps:**

1. Create a `Person` object without setting the last name.
2. Call the `getLastName` method on the `Person` object.
3. Verify that the returned last name is an empty string.

**Expected Result:**

The `getLastName` method should return an empty string if the last name is not set.

**Test Scenario 3:**

**Test Objective:** To verify that the `getLastName` method returns `null` if the person object is `null`.

**Test Data:**

- Create a `Person` object that is `null`.

**Test Steps:**

1. Create a `Person` object that is `null`.
2. Call the `getLastName` method on the `Person` object.
3. Verify that the returned last name is `null`.

**Expected Result:**

The `getLastName` method should return `null` if the person object is `null`.
*/
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.samples.petclinic.model.Person;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

class Person_getLastName_4814a2dee7_Test {

    @Test
    @DisplayName("Test to get last name with valid input")
    void testGetLastNameWithValidInput() {
        // TODO: Replace with real values
        String expectedLastName = "Smith";
        Person person = new Person();
        person.setLastName(expectedLastName);

        String actualLastName = person.getLastName();

        assertEquals(expectedLastName, actualLastName, "Last name should match");
    }

    @Test
    @DisplayName("Test to get last name with null input")
    void testGetLastNameWithNullInput() {
        Person person = new Person();

        String actualLastName = person.getLastName();

        assertNull(actualLastName, "Last name should be null");
    }

    @Test
    @DisplayName("Test to get last name with empty input")
    void testGetLastNameWithEmptyInput() {
        // TODO: Replace with real values
        String expectedLastName = "";
        Person person = new Person();
        person.setLastName(expectedLastName);

        String actualLastName = person.getLastName();

        assertEquals(expectedLastName, actualLastName, "Last name should be empty");
    }

    @Test
    @DisplayName("Test to get last name with null person object")
    void testGetLastNameWithNullPersonObject() {
        Person person = null;

        String actualLastName = person.getLastName();

        assertNull(actualLastName, "Last name should be null");
    }
}
