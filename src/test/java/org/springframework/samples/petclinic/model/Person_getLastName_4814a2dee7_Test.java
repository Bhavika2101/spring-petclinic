/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Open AI and AI Model gpt-4

1. **Scenario 1 - Null Value Test:** Test the getLastName function by setting the lastName to null. The expected result should be null. This scenario is important to ensure the function handles null values correctly.

2. **Scenario 2 - Non-Null Value Test:** Test the getLastName function with a non-null lastName. The expected result should be the same as the set value. This test is crucial to check the basic functionality of the function.

3. **Scenario 3 - Empty String Test:** Test the getLastName function with an empty string. The expected result should be an empty string. This scenario is necessary to verify how the function behaves with empty strings.

4. **Scenario 4 - White Space Test:** Test the getLastName function with a string that contains only white spaces. The expected result should be the string with white spaces. This test is crucial to check how the function handles white spaces.

5. **Scenario 5 - Special Characters Test:** Test the getLastName function with a string that contains special characters. The expected result should be the same string with special characters. This scenario is necessary to ensure the function can handle special characters.

6. **Scenario 6 - Numeric Values Test:** Test the getLastName function with a string that contains numeric values. The expected result should be the same string with numeric values. This test is crucial to ensure the function can handle numeric values.

7. **Scenario 7 - Long String Test:** Test the getLastName function with a very long string. The expected result should be the same long string. This scenario is important to check whether the function can handle long strings and if there are any length restrictions.

8. **Scenario 8 - Unicode Characters Test:** Test the getLastName function with a string that contains Unicode characters. The expected result should be the same string with Unicode characters. This scenario is necessary to ensure the function can handle Unicode characters.

9. **Scenario 9 - Case Sensitivity Test:** Test the getLastName function with a string in different cases: all lowercase, all uppercase, and a mix of both. The expected result should be the same as the input string, respecting the case. This scenario is necessary to ensure the function is case sensitive.
*/
package org.springframework.samples.petclinic.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class Person_getLastName_4814a2dee7_Test {

    private Person person;

    @BeforeEach
    public void setup() {
        person = new Person();
    }

    @Test
    public void testGetLastName_NullValue() {
        person.setLastName(null);
        assertEquals(null, person.getLastName());
    }

    @Test
    public void testGetLastName_NonNullValue() {
        person.setLastName("Smith");
        assertEquals("Smith", person.getLastName());
    }

    @Test
    public void testGetLastName_EmptyString() {
        person.setLastName("");
        assertEquals("", person.getLastName());
    }

    @Test
    public void testGetLastName_WhiteSpace() {
        person.setLastName(" ");
        assertEquals(" ", person.getLastName());
    }

    @Test
    public void testGetLastName_SpecialCharacters() {
        person.setLastName("@#$$%^&*()");
        assertEquals("@#$$%^&*()", person.getLastName());
    }

    @Test
    public void testGetLastName_NumericValues() {
        person.setLastName("1234567890");
        assertEquals("1234567890", person.getLastName());
    }

    @Test
    public void testGetLastName_LongString() {
        String longLastName = new String(new char[1000]).replace("\0", "a");
        person.setLastName(longLastName);
        assertEquals(longLastName, person.getLastName());
    }

    @Test
    public void testGetLastName_UnicodeCharacters() {
        person.setLastName("こんにちは");
        assertEquals("こんにちは", person.getLastName());
    }

    @Test
    public void testGetLastName_CaseSensitivity() {
        person.setLastName("smith");
        assertEquals("smith", person.getLastName());

        person.setLastName("SMITH");
        assertEquals("SMITH", person.getLastName());

        person.setLastName("Smith");
        assertEquals("Smith", person.getLastName());
    }
}
