/*
Test generated by RoostGPT for test pom-test using AI Type Open Source AI and AI Model meta-llama/Llama-2-13b-chat

Sure, here are some test scenarios you can use to validate the business logic of the `getLastName` method:

1. **Test with a valid last name**:
   - Set the `lastName` field to a non-blank string.
   - Call the `getLastName` method and verify that it returns the expected value.

2. **Test with an empty last name**:
   - Set the `lastName` field to an empty string.
   - Call the `getLastName` method and verify that it returns an empty string.

3. **Test with a null last name**:
   - Set the `lastName` field to null.
   - Call the `getLastName` method and verify that it returns null.

4. **Test with a last name containing only spaces**:
   - Set the `lastName` field to a string containing only spaces.
   - Call the `getLastName` method and verify that it returns an empty string.

5. **Test with a last name containing leading and trailing spaces**:
   - Set the `lastName` field to a string containing leading and trailing spaces.
   - Call the `getLastName` method and verify that it returns the string without the leading and trailing spaces.

6. **Test with a last name containing multiple spaces**:
   - Set the `lastName` field to a string containing multiple spaces.
   - Call the `getLastName` method and verify that it returns the string without the extra spaces.

Remember, these test scenarios are based on the assumption that the `lastName` field is not null and is a string. If the `lastName` field can be null or not a string, you will need to adjust the test scenarios accordingly.

*/
import org.junit.jupiter.api.Test;
import org.springframework.samples.petclinic.model.Person;
import static org.junit.jupiter.api.Assertions.*;

class Person_getLastName_4814a2dee7_Test {

    @Test
    void testGetLastName_success() {
        // Arrange
        Person person = new Person();
        person.setLastName("Smith");

        // Act
        String result = person.getLastName();

        // Assert
        assertEquals("Smith", result);
    }

    @Test
    void testGetLastName_null() {
        // Arrange
        Person person = new Person();

        // Act
        String result = person.getLastName();

        // Assert
        assertNull(result);
    }
}
