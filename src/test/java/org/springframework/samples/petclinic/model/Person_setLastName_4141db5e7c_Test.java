/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Vertex AI and AI Model code-bison

 **Test Scenario 1: Valid Last Name**

**Test Objective:** To verify that the `setLastName` method successfully sets a valid last name for the user.

**Test Steps:**

1. Create a new User object with a valid last name (e.g., "Doe").
2. Call the `setLastName` method on the User object with the valid last name.
3. Assert that the last name of the User object is equal to the valid last name.

**Expected Result:** The last name of the User object should be equal to the valid last name.

**Test Scenario 2: Null Last Name**

**Test Objective:** To verify that the `setLastName` method throws a `NullPointerException` when a null value is passed as the last name.

**Test Steps:**

1. Create a new User object with a null last name.
2. Call the `setLastName` method on the User object with the null last name.
3. Assert that a `NullPointerException` is thrown.

**Expected Result:** A `NullPointerException` should be thrown when a null value is passed as the last name.

**Test Scenario 3: Empty Last Name**

**Test Objective:** To verify that the `setLastName` method throws an `IllegalArgumentException` when an empty string is passed as the last name.

**Test Steps:**

1. Create a new User object with an empty last name.
2. Call the `setLastName` method on the User object with the empty last name.
3. Assert that an `IllegalArgumentException` is thrown.

**Expected Result:** An `IllegalArgumentException` should be thrown when an empty string is passed as the last name.

**Test Scenario 4: Last Name with Leading and Trailing Spaces**

**Test Objective:** To verify that the `setLastName` method successfully trims leading and trailing spaces from the last name.

**Test Steps:**

1. Create a new User object with a last name that has leading and trailing spaces (e.g., "   Doe   ").
2. Call the `setLastName` method on the User object with the last name with leading and trailing spaces.
3. Assert that the last name of the User object is equal to the trimmed last name (e.g., "Doe").

**Expected Result:** The last name of the User object should be equal to the trimmed last name.
*/
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.samples.petclinic.model.Person;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

@SpringBootTest
public class Person_setLastName_4141db5e7c_Test {

    @Autowired
    private Person person;

    @ParameterizedTest
    @ValueSource(strings = {"Doe", "John Doe"})
    public void testValidLastName(String lastName) {
        person.setLastName(lastName);
        assertEquals(lastName, person.getLastName());
    }

    @Test
    public void testNullLastName() {
        assertThrows(NullPointerException.class, () -> person.setLastName(null));
    }

    @Test
    public void testEmptyLastName() {
        assertThrows(IllegalArgumentException.class, () -> person.setLastName(""));
    }

    @Test
    public void testLastNameWithLeadingAndTrailingSpaces() {
        person.setLastName("   Doe   ");
        assertEquals("Doe", person.getLastName());
    }
}
