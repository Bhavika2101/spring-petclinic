/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Vertex AI and AI Model code-bison

 **Test Scenario 1: Null Name**

* **Test Objective:** Verify that the `toString()` method returns an empty string when the name is `null`.

* **Test Steps:**
  1. Create a new instance of the class with a `null` name.
  2. Call the `toString()` method on the instance.
  3. Verify that the returned string is empty.

**Test Scenario 2: Empty Name**

* **Test Objective:** Verify that the `toString()` method returns an empty string when the name is an empty string.

* **Test Steps:**
  1. Create a new instance of the class with an empty name.
  2. Call the `toString()` method on the instance.
  3. Verify that the returned string is empty.

**Test Scenario 3: Valid Name**

* **Test Objective:** Verify that the `toString()` method returns the name of the instance when the name is valid.

* **Test Steps:**
  1. Create a new instance of the class with a valid name.
  2. Call the `toString()` method on the instance.
  3. Verify that the returned string is equal to the name of the instance.
*/
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import org.springframework.samples.petclinic.model.NamedEntity;

import static org.junit.jupiter.api.Assertions.*;

class NamedEntity_toString_ceffa8036e_Test {

    @ParameterizedTest
    @ValueSource(strings = {"", " "})
    void testToStringWithEmptyOrBlankName(String name) {
        NamedEntity entity = new NamedEntity();
        entity.setName(name);
        assertEquals("", entity.toString());
    }

    @Test
    void testToStringWithNullName() {
        NamedEntity entity = new NamedEntity();
        assertNull(entity.getName());
        assertEquals("", entity.toString());
    }

    @Test
    void testToStringWithValidName() {
        NamedEntity entity = new NamedEntity();
        entity.setName("John Doe");
        assertEquals("John Doe", entity.toString());
    }
}
