/*
Test generated by RoostGPT for test java-springboot-unit-testing using AI Type Vertex AI and AI Model code-bison

 **Test Scenario 1: Verify the default values of the Owner object**

* **Test Objective:**
  * To verify that the Owner object created in the initCreationForm() method has the default values as expected.

* **Test Steps:**
  1. Call the initCreationForm() method and retrieve the Owner object from the model.
  2. Assert that the Owner object has the following default values:
    * id: null
    * firstName: null
    * lastName: null
    * address: null
    * city: null
    * telephone: null

**Test Scenario 2: Verify the view name returned by the initCreationForm() method**

* **Test Objective:**
  * To verify that the initCreationForm() method returns the correct view name.

* **Test Steps:**
  1. Call the initCreationForm() method and retrieve the view name.
  2. Assert that the view name is VIEWS_OWNER_CREATE_OR_UPDATE_FORM.
*/
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class OwnerController_initCreationForm_d86a3fe6d2_Test {

    @Mock
    private Model model;

    @InjectMocks
    private OwnerController ownerController;

    @Test
    void testInitCreationForm_defaultValues() {
        // Arrange
        Owner expectedOwner = new Owner();

        // Act
        String viewName = ownerController.initCreationForm(model);
        Owner actualOwner = (Owner) model.asMap().get("owner");

        // Assert
        assertEquals(VIEWS_OWNER_CREATE_OR_UPDATE_FORM, viewName);
        assertNotNull(actualOwner);
        assertEquals(expectedOwner, actualOwner);
    }
}
