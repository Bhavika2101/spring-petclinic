# ********RoostGPT********

# Test generated by RoostGPT for test hsbc-api-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /direct-debit-consents_post for http method type POST 
# RoostTestHash=93cc6baa2f
# 
# 

# ********RoostGPT********
Feature: Direct Debit Consents API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
  * configure headers = {Authorization: '#(AUTH_TOKEN)', 'Content-Type': 'application/json'}

Scenario Outline: Test POST /direct-debit-consents with valid input
  Given path '/direct-debit-consents'
  And request { "data": {"permissions": ["<permissions>"], "expirationDate": "<expirationDate>"} }
  When method post
  Then status 201
  And match response.data == { "consentId": "#string", "creationDate": "#string", "status": "#string", "statusUpdateDate": "#string", "permissions": ["#string"], "expirationDate": "#string" }
  And match response.links == { "self": "#string", "prev": "#string", "next": "#string" }

Examples:
| permissions | expirationDate |
| 'read'      | '2022-12-31T23:59:59Z' |
| 'write'     | '2022-12-31T23:59:59Z' |

Scenario: Test POST /direct-debit-consents with invalid input
  Given path '/direct-debit-consents'
  And request { "data": {"permissions": ["invalid"], "expirationDate": "invalid"} }
  When method post
  Then status 400
  And match response == { "id": "#string", "errors": [{"code": "#string", "causes": "#string", "extendedDetails": {"#string": "#string"}}] }

Scenario: Test POST /direct-debit-consents without authorization
  * configure headers = { 'Content-Type': 'application/json' }
  Given path '/direct-debit-consents'
  And request { "data": {"permissions": ["read"], "expirationDate": "2022-12-31T23:59:59Z"} }
  When method post
  Then status 401
